{"version":3,"sources":["Drag/DragContext.tsx","Drag/DragTimelineRow.tsx","Drag/DragTimelineEvent.tsx","Drag/DragTimeline.tsx","Demo1.tsx","Demo2.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["StyledDiv","styled","div","isDragging","defaultContext","uuid","data","position","top","left","GhostComponent","setPosition","getPosition","updateDragState","setPositionGetter","DragContext","React","createContext","useDrag","useContext","DragProvider","ref","children","onDrop","useRef","positionGetter","Error","current","useState","dragState","setDragState","reset","originRow","destinationRow","useCallback","nextState","prevState","updateDragStateThrottle","throttle","getter","Provider","value","onMouseLeave","onMouseUp","event","eventDestination","onMouseMove","clientY","clientX","forwardRef","DragRowContext","id","DragTimelineRow","extraData","rest","TimelineContext","state","currentScaleOption","days","uuidRef","getUUID","width","widths","day","length","active","useMemo","name","style","onMouseOver","TimelineRow","contentProps","css","background","isMouseDown","DragTimelineEvent","mouseDownDelay","timelineProps","ghost","activeUuid","row","timeoutRef","setMouseDown","text","widthPx","margin","transform","userSelect","onMouseDown","window","setTimeout","clearTimeout","marginLeft","offsetPx","visibility","GhostWrapper","DragTimeline","timelineClassName","ghostRef","timelineInner","element","rect","calculateDate","startDate","endDate","newStart","addDays","from","addMilliseconds","differenceInMilliseconds","useEffect","document","querySelector","getBoundingClientRect","snapshotDragState","console","log","scrollLeft","relativeX","x","dayInYear","Math","floor","useLayoutEffect","run","raf","pos","requestAnimationFrame","destinationDate","lightFormat","DemoOne","setState","rowID","rowName","start","toString","end","Timeline","className","range","hasSide","Date","today","TimelineTodayMarker","TimelineMonths","TimelineWeeks","TimelineDays","TimelineRows","TimelineEvents","TimelineEvent","render","backgroundColor","color","Table","TableColumn","field","DemoTwo","apiData","dataState","setData","oldState","prevDate","beforeRowIndex","findIndex","beforeDataIndex","afterRowIndex","movingData","slice","toISOString","map","dataRow","firstName","i","eventName","App","TabSet","Tab","title","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4877f889.chunk.js","sourcesContent":["import React, { useCallback, useRef, useState } from \"react\";\nimport throttle from \"lodash/throttle\";\n\nimport styled from \"styled-components\";\nconst StyledDiv = styled.div<{ isDragging: boolean }>`\ncursor: ${({ isDragging }) => (isDragging ? \"grabbing\" : \"default\")};\nuser-select: none;\n\n}`;\ntype Position = {\n  top: number;\n  left: number;\n};\nexport type Row = {\n  id: string;\n  name?: string;\n  extraData?: unknown;\n};\ntype DragContextState = {\n  uuid: string | null;\n  position: Position;\n  data: {\n    startDate: Date;\n    endDate: Date;\n    widthPx: string;\n    offsetPx: string;\n    extraData: unknown;\n  } | null;\n  isDragging: boolean;\n  GhostComponent: React.ComponentType<{ text?: string }> | null;\n  originRow?: Row;\n  destinationRow?: Row;\n};\n\ntype DropForwardEventCallback = (\n  event: React.MouseEvent<HTMLDivElement, MouseEvent>,\n  dragState: DragContextState\n) => {\n  startDate: Date;\n  endDate: Date;\n};\n\ntype DragContextProps = {\n  setPosition: (top: number, left: number) => void;\n  getPosition: () => Position;\n  updateDragState: (drag: Partial<DragContextState>) => void;\n  setPositionGetter: (positionGetter: DropForwardEventCallback) => void;\n} & DragContextState;\n\nconst defaultContext: DragContextProps = {\n  uuid: null,\n  data: null,\n  position: {\n    top: 0,\n    left: 0,\n  },\n  isDragging: false,\n  GhostComponent: () => null,\n  setPosition: () => void 0,\n  getPosition: () => ({\n    top: 0,\n    left: 0,\n  }),\n  updateDragState: () => void 0,\n  setPositionGetter: () => void 0,\n};\nconst DragContext = React.createContext<DragContextProps>(defaultContext);\n\nexport const useDrag = () => {\n  return React.useContext(DragContext);\n};\n\nexport type onDropEvent = Pick<\n  DragContextState,\n  \"destinationRow\" | \"originRow\" | \"data\" | \"uuid\"\n> & {\n  eventDestination: {\n    startDate: Date;\n    endDate: Date;\n  };\n};\n\ntype DragProviderProps = {\n  children: React.ReactNode;\n  onDrop: (onDropEvent: onDropEvent) => void;\n};\nconst DragProvider: React.ForwardRefRenderFunction<{}, DragProviderProps> = (\n  { children, onDrop },\n  ref\n) => {\n  const position = useRef<Position>({\n    top: 0,\n    left: 0,\n  });\n\n  const positionGetter = useRef<DropForwardEventCallback>(() => {\n    throw new Error(\"onDrop no defined\");\n  });\n\n  const setPosition = (top: number, left: number) => {\n    position.current.top = top;\n    position.current.left = left;\n  };\n\n  const getPosition = () => {\n    return position.current;\n  };\n\n  const [dragState, setDragState] = useState<DragContextState>({\n    uuid: null,\n    data: null,\n    GhostComponent: null,\n    position: {\n      top: 0,\n      left: 0,\n    },\n    isDragging: false,\n  });\n\n  const reset = () =>\n    setDragState({\n      uuid: null,\n      data: null,\n      GhostComponent: null,\n      position: {\n        top: 0,\n        left: 0,\n      },\n      isDragging: false,\n      originRow: void 0,\n      destinationRow: void 0,\n    });\n\n  const updateDragState = useCallback(\n    (nextState: Partial<DragContextState>) => {\n      setDragState((prevState) => ({\n        ...prevState,\n        ...nextState,\n      }));\n    },\n    [setDragState]\n  );\n\n  const updateDragStateThrottle = useCallback(\n    throttle((top: number, left: number) => {\n      updateDragState({\n        position: {\n          top,\n          left,\n        },\n      });\n    }, 500),\n    [updateDragState]\n  );\n\n  const setPositionGetter = useCallback((getter: DropForwardEventCallback) => {\n    positionGetter.current = getter;\n  }, []);\n\n  return (\n    <DragContext.Provider\n      value={{\n        ...dragState,\n        setPosition,\n        getPosition,\n        updateDragState,\n        setPositionGetter,\n      }}\n    >\n      <StyledDiv\n        isDragging={dragState.isDragging}\n        onMouseLeave={() => {\n          reset();\n        }}\n        onMouseUp={(event) => {\n          if (dragState.isDragging) {\n            const eventDestination = positionGetter.current(event, dragState);\n            onDrop({\n              uuid: dragState.uuid,\n              originRow: dragState.originRow,\n              destinationRow: dragState.destinationRow,\n              data: dragState.data,\n              eventDestination,\n            });\n            reset();\n          }\n        }}\n        onMouseMove={(event) => {\n          setPosition(event.clientY, event.clientX);\n          if (dragState.isDragging) {\n            updateDragStateThrottle(event.clientY, event.clientX);\n          }\n        }}\n      >\n        {children}\n      </StyledDiv>\n    </DragContext.Provider>\n  );\n};\n\nexport default React.forwardRef<{}, DragProviderProps>(DragProvider);\n","import React, { useContext, useRef, useMemo } from \"react\";\nimport {\n  TimelineContext,\n  TimelineRow,\n  TimelineRowProps,\n  useTimelinePosition,\n} from \"@royalnavy/react-component-library\";\nimport { v4 as uuid } from \"uuid\";\nimport { Row, useDrag } from \"./DragContext\";\nimport styled from \"styled-components\";\n\ntype DragRowProps = {\n  id?: string;\n\n  extraData?: unknown;\n} & TimelineRowProps;\n\nconst DragRowContext = React.createContext<Row>({ id: \"\" });\n\nexport const useDragRow = () => {\n  return useContext(DragRowContext);\n};\n\nexport const DragTimelineRow = ({ id, extraData, ...rest }: DragRowProps) => {\n  const {\n    state: { currentScaleOption, days },\n  } = useContext(TimelineContext);\n  const { isDragging, updateDragState, destinationRow } = useDrag();\n  const uuidRef = useRef(id);\n  const getUUID = (): string => {\n    if (!uuidRef.current) {\n      uuidRef.current = uuid();\n    }\n    return uuidRef.current;\n  };\n\n  const width = `${currentScaleOption.widths.day * days.length}px`;\n  const active = getUUID() === destinationRow?.id;\n  return useMemo(() => {\n    const destinationRow = { id: getUUID(), extraData, name: rest.name };\n    return (\n      <DragRowContext.Provider value={destinationRow}>\n        <div\n          style={{ width }}\n          onMouseLeave={() => {\n            updateDragState({\n              destinationRow: void 0,\n            });\n          }}\n          onMouseOver={() => {\n            if (isDragging) {\n              updateDragState({\n                destinationRow,\n              });\n            }\n          }}\n        >\n          <TimelineRow\n            {...rest}\n            contentProps={{\n              css: { background: active ? \"yellow\" : \"transparent\" },\n            }}\n          />\n        </div>\n      </DragRowContext.Provider>\n    );\n  }, [isDragging, updateDragState, active]);\n};\n","import React, { useRef, useState } from \"react\";\nimport { v4 as uuid } from \"uuid\";\nimport { useDrag } from \"./DragContext\";\nimport { useDragRow } from \"./DragTimelineRow\";\n\nimport styled from \"styled-components\";\n\nconst StyledDiv = styled.div<{ isMouseDown: boolean }>`\n  cursor: ${({ isMouseDown }) => (isMouseDown ? \"grabbing\" : \"grab\")};\n  user-select: none;\n  -webkit-user-select: none;\n\n  * > {\n    user-select: none;\n    -webkit-user-select: none;\n  }\n`;\n\ntype DragTimelineEventProps = {\n  id?: string;\n  ghost?: React.ComponentType;\n  mouseDownDelay?: number;\n\n  style: React.CSSProperties;\n  extraData?: unknown;\n  timelineProps: {\n    startDate: Date;\n    endDate: Date;\n    widthPx: string;\n    offsetPx: string;\n  };\n  children: (active: boolean) => React.ReactElement;\n};\nconst DragTimelineEvent: React.FC<DragTimelineEventProps> = ({\n  id = null,\n  children,\n  mouseDownDelay = 1000,\n  timelineProps,\n  style = {},\n  ghost,\n  extraData = {},\n}) => {\n  const { updateDragState, uuid: activeUuid } = useDrag();\n  const row = useDragRow();\n  const uuidRef = useRef(id);\n  const timeoutRef = useRef(0);\n  const getUUID = () => {\n    if (uuidRef.current === null) {\n      uuidRef.current = uuid();\n    }\n    return uuidRef.current;\n  };\n  const [isMouseDown, setMouseDown] = useState(false);\n  const defaultGhost: React.FC<{ text?: string }> = ({ text }) => {\n    return (\n      <div\n        style={{\n          width: timelineProps.widthPx,\n          ...style,\n          margin: 0,\n          transform: \"none\",\n          top: 0,\n          left: 0,\n          userSelect: \"none\",\n        }}\n      >\n        {text}\n        {children(getUUID() === activeUuid)}\n      </div>\n    );\n  };\n  const GhostComponent = ghost || defaultGhost;\n  return (\n    <StyledDiv\n      isMouseDown={isMouseDown}\n      onMouseDown={(event) => {\n        setMouseDown(true);\n        timeoutRef.current = window.setTimeout(() => {\n          updateDragState({\n            originRow: row,\n            data: {\n              ...timelineProps,\n              extraData,\n            },\n            uuid: getUUID(),\n            isDragging: true,\n            GhostComponent,\n            position: {\n              top: event.clientY,\n              left: event.clientX,\n            },\n          });\n        }, mouseDownDelay);\n      }}\n      onMouseUp={() => {\n        setMouseDown(false);\n        window.clearTimeout(timeoutRef.current);\n      }}\n      style={{\n        userSelect: \"none\",\n        marginLeft: timelineProps.offsetPx,\n        width: timelineProps.widthPx,\n        visibility: getUUID() === activeUuid ? \"hidden\" : \"visible\",\n        ...style,\n      }}\n    >\n      {children(getUUID() === activeUuid)}\n    </StyledDiv>\n  );\n};\n\nexport default DragTimelineEvent;\n","import React, { useContext, useEffect, useRef } from \"react\";\nimport { useDrag } from \"./DragContext\";\nimport styled from \"styled-components\";\nimport { TimelineContext } from \"@royalnavy/react-component-library\";\nimport { addDays, differenceInMilliseconds, lightFormat } from \"date-fns\";\nimport { addMilliseconds } from \"date-fns\";\n\nconst GhostWrapper = styled.div`\n  user-select: none;\n  pointer-events: none;\n  will-change: all;\n  position: fixed;\n  top: 0;\n  left: 0;\n  opacity: 0.5;\n  z-index: 10000;\n`;\nconst DragTimeline: React.FC<{ timelineClassName?: string }> = ({\n  timelineClassName = \"\",\n}) => {\n  const {\n    GhostComponent,\n    isDragging,\n    getPosition,\n    position,\n    data,\n    setPositionGetter,\n  } = useDrag();\n  const {\n    state: { currentScaleOption },\n  } = useContext(TimelineContext);\n\n  const ghostRef = useRef<HTMLDivElement>(null);\n\n  const timelineInner = useRef<{\n    element: HTMLDivElement | null;\n    rect: DOMRect | null;\n  }>({ element: null, rect: null });\n\n  const calculateDate = (day: number, startDate: Date, endDate: Date) => {\n    const newStart = addDays(currentScaleOption.from, day);\n    return {\n      startDate: newStart,\n      endDate: addMilliseconds(\n        newStart,\n        differenceInMilliseconds(endDate, startDate)\n      ),\n    };\n  };\n\n  useEffect(() => {\n    timelineInner.current.element = document.querySelector(\n      `.${timelineClassName} .timeline__inner`\n    );\n    timelineInner.current.rect =\n      timelineInner.current.element?.getBoundingClientRect() || null;\n\n    setPositionGetter((event, snapshotDragState) => {\n      timelineInner.current.rect =\n        timelineInner.current.element?.getBoundingClientRect() || null;\n      console.log(timelineInner.current.element?.scrollLeft);\n      const relativeX =\n        event.clientX -\n        timelineInner.current.rect!.x +\n        (timelineInner.current.element?.scrollLeft || 0);\n      const dayInYear = Math.floor(relativeX / currentScaleOption.widths.day);\n\n      return calculateDate(\n        dayInYear,\n        snapshotDragState.data!.startDate,\n        snapshotDragState.data!.endDate\n      );\n    });\n  }, [currentScaleOption.widths.day]);\n\n  //Start polling position and set the transform directly\n  React.useLayoutEffect(() => {\n    let run = isDragging;\n    const raf = () => {\n      if (GhostComponent && ghostRef.current) {\n        const pos = getPosition();\n        ghostRef.current.style.transform = `translate(${pos.left}px, ${pos.top}px)`;\n        window.requestAnimationFrame(raf);\n      }\n    };\n    const startRaf = () => {\n      if (run) {\n        window.requestAnimationFrame(raf);\n      }\n      return () => {\n        run = false;\n      };\n    };\n    return startRaf();\n  }, [GhostComponent, isDragging, ghostRef]);\n\n  if (!GhostComponent) {\n    return null;\n  }\n  let text = \"\";\n  if (position && isDragging) {\n    const relativeX =\n      position.left -\n      timelineInner.current.rect!.x +\n      (timelineInner.current.element?.scrollLeft || 0);\n    const dayInYear = Math.floor(relativeX / currentScaleOption.widths.day);\n    const destinationDate = calculateDate(\n      dayInYear,\n      data!.startDate,\n      data!.endDate\n    );\n    text = `${lightFormat(\n      destinationDate.startDate,\n      \"dd-MM-yyyy\"\n    )}  -  ${lightFormat(destinationDate.endDate, \"dd-MM-yyyy\")}`;\n  }\n  return (\n    <GhostWrapper ref={ghostRef}>\n      <GhostComponent text={text} />\n    </GhostWrapper>\n  );\n};\n\nexport default DragTimeline;\n","import React, { useRef, useState } from \"react\";\nimport \"@royalnavy/css-framework/dist/styles.css\";\nimport \"@royalnavy/fonts\";\nimport {\n  Timeline,\n  TimelineTodayMarker,\n  TimelineMonths,\n  TimelineWeeks,\n  TimelineDays,\n  TimelineRows,\n  RowProps,\n  TimelineEvents,\n  TimelineEvent,\n  Table,\n  TableColumn,\n} from \"@royalnavy/react-component-library\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport DragTimelineEvent from \"./Drag/DragTimelineEvent\";\nimport DragProvider, { onDropEvent } from \"./Drag/DragContext\";\nimport DragTimeline from \"./Drag/DragTimeline\";\nimport { DragTimelineRow } from \"./Drag/DragTimelineRow\";\n\nfunction DemoOne() {\n  const [dragState, setState] = useState<onDropEvent>();\n  const data = [\n    {\n      state: \"Before\",\n      id: \"before\",\n      rowID: dragState?.originRow?.id,\n      rowName: dragState?.originRow?.name,\n      start: dragState?.data?.startDate.toString(),\n      end: dragState?.data?.endDate.toString(),\n    },\n    {\n      state: \"After\",\n      id: \"after\",\n      rowID: dragState?.destinationRow?.id,\n      rowName: dragState?.destinationRow?.name,\n      start: dragState?.eventDestination?.startDate.toString(),\n      end: dragState?.eventDestination?.endDate.toString(),\n    },\n  ];\n  return (\n    <div>\n      <DragProvider onDrop={setState}>\n        <Timeline\n          className=\"DemoOne\"\n          range={6}\n          hasSide\n          startDate={new Date(2020, 3, 1)}\n          today={new Date(2020, 3, 15)}\n        >\n          <DragTimeline timelineClassName=\"DemoOne\" />\n          <TimelineTodayMarker />\n          <TimelineMonths />\n          <TimelineWeeks />\n          <TimelineDays />\n          <TimelineRows>\n            <DragTimelineRow name=\"Row 1\" extraData={{}}>\n              <TimelineEvents>\n                <TimelineEvent\n                  startDate={new Date(2020, 3, 6)}\n                  endDate={new Date(2020, 3, 10)}\n                  render={(\n                    startDate: Date,\n                    endDate: Date,\n                    widthPx: string,\n                    offsetPx: string\n                  ) => {\n                    return (\n                      <DragTimelineEvent\n                        timelineProps={{\n                          startDate,\n                          endDate,\n                          widthPx,\n                          offsetPx,\n                        }}\n                        style={{\n                          position: \"absolute\",\n                          top: \"50%\",\n                          transform: \"translateY(-50%)\",\n                          backgroundColor: \"black\",\n                          color: \"white\",\n                        }}\n                      >\n                        {(active) => <div>Event 1</div>}\n                      </DragTimelineEvent>\n                    );\n                  }}\n                />\n\n                <TimelineEvent\n                  startDate={new Date(2020, 3, 16)}\n                  endDate={new Date(2020, 3, 20)}\n                  render={(\n                    startDate: Date,\n                    endDate: Date,\n                    widthPx: string,\n                    offsetPx: string\n                  ) => {\n                    return (\n                      <DragTimelineEvent\n                        timelineProps={{\n                          startDate,\n                          endDate,\n                          widthPx,\n                          offsetPx,\n                        }}\n                        style={{\n                          position: \"absolute\",\n                          top: \"50%\",\n                          transform: \"translateY(-50%)\",\n                          backgroundColor: \"black\",\n                          color: \"white\",\n                        }}\n                      >\n                        {(active) => <div>Event 2</div>}\n                      </DragTimelineEvent>\n                    );\n                  }}\n                />\n              </TimelineEvents>\n            </DragTimelineRow>\n            <DragTimelineRow name=\"Row 2\">\n              <TimelineEvents>\n                <TimelineEvent\n                  startDate={new Date(2020, 3, 15)}\n                  endDate={new Date(2020, 3, 19)}\n                  render={(\n                    startDate: Date,\n                    endDate: Date,\n                    widthPx: string,\n                    offsetPx: string\n                  ) => {\n                    return (\n                      <DragTimelineEvent\n                        timelineProps={{\n                          startDate,\n                          endDate,\n                          widthPx,\n                          offsetPx,\n                        }}\n                        style={{\n                          position: \"absolute\",\n                          top: \"50%\",\n                          transform: \"translateY(-50%)\",\n                          backgroundColor: \"black\",\n                          color: \"white\",\n                        }}\n                      >\n                        {(active) => <div>Event 3</div>}\n                      </DragTimelineEvent>\n                    );\n                  }}\n                />\n\n                <TimelineEvent\n                  startDate={new Date(2020, 3, 22)}\n                  endDate={new Date(2020, 3, 24)}\n                  render={(\n                    startDate: Date,\n                    endDate: Date,\n                    widthPx: string,\n                    offsetPx: string\n                  ) => {\n                    return (\n                      <DragTimelineEvent\n                        timelineProps={{\n                          startDate,\n                          endDate,\n                          widthPx,\n                          offsetPx,\n                        }}\n                        style={{\n                          position: \"absolute\",\n                          top: \"50%\",\n                          transform: \"translateY(-50%)\",\n                          backgroundColor: \"black\",\n                          color: \"white\",\n                        }}\n                      >\n                        {(active) => <div>Event 4</div>}\n                      </DragTimelineEvent>\n                    );\n                  }}\n                />\n              </TimelineEvents>\n            </DragTimelineRow>\n            <DragTimelineRow name=\"Row 3\">{}</DragTimelineRow>\n          </TimelineRows>\n        </Timeline>\n      </DragProvider>\n      <Table data={data as RowProps[]}>\n        <TableColumn field=\"state\">Sate</TableColumn>\n        <TableColumn field=\"rowName\">Row Name</TableColumn>\n        <TableColumn field=\"start\">Start</TableColumn>\n        <TableColumn field=\"end\">End</TableColumn>\n      </Table>\n    </div>\n  );\n}\n\nexport default DemoOne;\n","import React, { useLayoutEffect, useRef, useState } from \"react\";\nimport \"@royalnavy/css-framework/dist/styles.css\";\nimport \"@royalnavy/fonts\";\nimport {\n  Timeline,\n  TimelineTodayMarker,\n  TimelineMonths,\n  TimelineWeeks,\n  TimelineDays,\n  TimelineRows,\n  RowProps,\n  TimelineEvents,\n  TimelineEvent,\n  Table,\n  TableColumn,\n  Tab,\n  TabSet,\n} from \"@royalnavy/react-component-library\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport DragTimelineEvent from \"./Drag/DragTimelineEvent\";\nimport DragProvider, { onDropEvent } from \"./Drag/DragContext\";\nimport DragTimeline from \"./Drag/DragTimeline\";\nimport { DragTimelineRow } from \"./Drag/DragTimelineRow\";\nimport apiData from \"./data.json\";\nimport { findIndex } from \"lodash\";\n\nfunction DemoTwo() {\n  const [dragState, setState] = useState<onDropEvent>();\n  const [dataState, setData] = useState<typeof apiData>(apiData);\n  const data = [\n    {\n      state: \"Before\",\n      id: \"before\",\n      rowID: dragState?.originRow?.id,\n      rowName: dragState?.originRow?.name,\n      start: dragState?.data?.startDate.toString(),\n      end: dragState?.data?.endDate.toString(),\n    },\n    {\n      state: \"After\",\n      id: \"after\",\n      rowID: dragState?.destinationRow?.id,\n      rowName: dragState?.destinationRow?.name,\n      start: dragState?.eventDestination?.startDate.toString(),\n      end: dragState?.eventDestination?.endDate.toString(),\n    },\n  ];\n\n  const onDrop = (dragState: onDropEvent) => {\n    setState(dragState);\n    setData((oldState) => {\n      if (dragState.destinationRow) {\n        const prevDate = [...oldState];\n        const beforeRowIndex = prevDate.findIndex(\n          (row) => row.id === dragState?.originRow?.id\n        );\n        const beforeDataIndex = prevDate[beforeRowIndex].data.findIndex(\n          (event) => event.id === dragState.uuid\n        );\n\n        const afterRowIndex = prevDate.findIndex(\n          (row) => row.id === dragState?.destinationRow?.id\n        );\n\n        const movingData = prevDate[beforeRowIndex].data[beforeDataIndex];\n\n        prevDate[beforeRowIndex] = {\n          ...prevDate[beforeRowIndex],\n          data: [\n            ...prevDate[beforeRowIndex].data.slice(0, beforeDataIndex),\n            ...prevDate[beforeRowIndex].data.slice(beforeDataIndex + 1),\n          ],\n        };\n\n        prevDate[afterRowIndex] = {\n          ...prevDate[afterRowIndex],\n          data: [\n            ...prevDate[afterRowIndex].data,\n            {\n              ...movingData,\n              startDate: dragState.eventDestination.startDate.toISOString(),\n              endDate: dragState.eventDestination.endDate.toISOString(),\n            },\n          ],\n        };\n        return [...prevDate];\n      }\n      return oldState;\n    });\n  };\n\n  return (\n    <div>\n      <DragProvider onDrop={onDrop}>\n        <Timeline\n          range={6}\n          hasSide\n          startDate={new Date(2020, 0, 1)}\n          className=\"DemoTwo\"\n        >\n          <DragTimeline timelineClassName=\"DemoTwo\" />\n          <TimelineTodayMarker />\n          <TimelineMonths />\n          <TimelineWeeks />\n          <TimelineDays />\n          <TimelineRows>\n            {dataState.map((dataRow) => {\n              return (\n                <DragTimelineRow\n                  key={dataRow.id}\n                  name={dataRow.firstName}\n                  id={dataRow.id}\n                  extraData={{}}\n                >\n                  <TimelineEvents>\n                    {dataRow.data.map((event, i) => (\n                      <TimelineEvent\n                        key={event.id}\n                        startDate={new Date(event.startDate)}\n                        endDate={new Date(event.endDate)}\n                        render={(\n                          startDate: Date,\n                          endDate: Date,\n                          widthPx: string,\n                          offsetPx: string\n                        ) => {\n                          return (\n                            <DragTimelineEvent\n                              id={event.id}\n                              timelineProps={{\n                                startDate,\n                                endDate,\n                                widthPx,\n                                offsetPx,\n                              }}\n                              style={{\n                                position: \"absolute\",\n                                top: \"50%\",\n                                transform: \"translateY(-50%)\",\n                                backgroundColor: \"black\",\n                                color: \"white\",\n                              }}\n                            >\n                              {(active) => <div>{event.eventName}</div>}\n                            </DragTimelineEvent>\n                          );\n                        }}\n                      />\n                    ))}\n                  </TimelineEvents>\n                </DragTimelineRow>\n              );\n            })}\n          </TimelineRows>\n        </Timeline>\n      </DragProvider>\n      <Table data={data as RowProps[]}>\n        <TableColumn field=\"state\">Sate</TableColumn>\n        <TableColumn field=\"rowName\">Row Name</TableColumn>\n        <TableColumn field=\"start\">Start</TableColumn>\n        <TableColumn field=\"end\">End</TableColumn>\n      </Table>\n    </div>\n  );\n}\n\nexport default DemoTwo;\n","import React, { useRef, useState } from \"react\";\nimport \"@royalnavy/css-framework/dist/styles.css\";\nimport \"@royalnavy/fonts\";\nimport { TabSet, Tab } from \"@royalnavy/react-component-library\";\n\nimport \"./App.css\";\n\nimport DemoOne from \"./Demo1\";\nimport DemoTwo from \"./Demo2\";\nfunction App() {\n  return (\n    <TabSet>\n      <Tab title=\"Demo small demo\">\n        <DemoOne />\n      </Tab>\n      <Tab title=\"Data manipulation\">\n        <DemoTwo />\n      </Tab>\n    </TabSet>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}